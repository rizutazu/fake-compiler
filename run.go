package main

import (
	"github.com/spf13/cobra"
	"log"
)

var runCmd = &cobra.Command{
	Use:   "run",
	Short: "run compiler",
	Long: `running the specified compiler type over given directory or config file. The config file is generated by "gen"
subcommand and acts like a summary of a directory`,
	Run: func(cmd *cobra.Command, args []string) {
		compiler, err := parseCmd()
		if err != nil {
			log.Fatal(err)
		}
		compiler.Run()
	},
}

func init() {
	runCmd.Flags().IntVarP(&threads, "threads", "t", 16, "number of threads")
	runCmd.Flags().StringVarP(&compilerType, "compiler", "C", "", "specified compiler type")
	//runCmd.PersistentFlags().StringVarP(&bar, "progressbar", "p", "", "specified progressbar")
	runCmd.Flags().StringVarP(&configPath, "config", "c", "", "path of compiler config")
	runCmd.Flags().StringVarP(&dirPath, "dir", "d", "", "path of directory to compile")
	//_ = runCmd.MarkFlagRequired("threads")
	runCmd.MarkFlagsRequiredTogether("dir", "compiler")
	//_ = runCmd.MarkFlagRequired("progressbar")
	runCmd.MarkFlagsMutuallyExclusive("config", "dir")
	runCmd.MarkFlagsOneRequired("config", "dir")
}
